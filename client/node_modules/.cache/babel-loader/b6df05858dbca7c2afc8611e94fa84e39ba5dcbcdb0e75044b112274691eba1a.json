{"ast":null,"code":"import React from'react';import{Box,CircularProgress,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoadingSpinner=_ref=>{let{message='Loading...'}=_ref;return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",minHeight:\"100vh\",gap:2,children:[/*#__PURE__*/_jsx(CircularProgress,{size:60}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:message})]});};export default LoadingSpinner;","map":{"version":3,"names":["React","Box","CircularProgress","Typography","jsx","_jsx","jsxs","_jsxs","LoadingSpinner","_ref","message","display","flexDirection","alignItems","justifyContent","minHeight","gap","children","size","variant","color"],"sources":["/Users/munichandrasekarreddyk/playmatch/client/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\ninterface LoadingSpinnerProps {\n  message?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ message = 'Loading...' }) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      minHeight=\"100vh\"\n      gap={2}\n    >\n      <CircularProgress size={60} />\n      <Typography variant=\"h6\" color=\"text.secondary\">\n        {message}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,gBAAgB,CAAEC,UAAU,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMlE,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,OAAO,CAAG,YAAa,CAAC,CAAAD,IAAA,CAC/E,mBACEF,KAAA,CAACN,GAAG,EACFU,OAAO,CAAC,MAAM,CACdC,aAAa,CAAC,QAAQ,CACtBC,UAAU,CAAC,QAAQ,CACnBC,cAAc,CAAC,QAAQ,CACvBC,SAAS,CAAC,OAAO,CACjBC,GAAG,CAAE,CAAE,CAAAC,QAAA,eAEPZ,IAAA,CAACH,gBAAgB,EAACgB,IAAI,CAAE,EAAG,CAAE,CAAC,cAC9Bb,IAAA,CAACF,UAAU,EAACgB,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,gBAAgB,CAAAH,QAAA,CAC5CP,OAAO,CACE,CAAC,EACV,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}