{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initAuth=async()=>{try{const storedToken=localStorage.getItem('token');if(storedToken){setToken(storedToken);const userData=await authService.getCurrentUser();setUser(userData);}}catch(error){console.error('Auth initialization error:',error);localStorage.removeItem('token');}finally{setLoading(false);}};initAuth();},[]);const login=async(email,password)=>{try{const response=await authService.login(email,password);const{user:userData,token:authToken}=response;setUser(userData);setToken(authToken);localStorage.setItem('token',authToken);}catch(error){throw error;}};const signup=async userData=>{try{const response=await authService.signup(userData);const{user:newUser,token:authToken}=response;setUser(newUser);setToken(authToken);localStorage.setItem('token',authToken);}catch(error){throw error;}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('token');};const value={user,token,login,signup,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","initAuth","storedToken","localStorage","getItem","userData","getCurrentUser","error","console","removeItem","login","email","password","response","authToken","setItem","signup","newUser","logout","value","Provider"],"sources":["/Users/munichandrasekarreddyk/playmatch/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/authService';\n\ninterface User {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  isVerified: boolean;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  signup: (userData: SignupData) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\ninterface SignupData {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  dateOfBirth?: string;\n  phone?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n          setToken(storedToken);\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authService.login(email, password);\n      const { user: userData, token: authToken } = response;\n      \n      setUser(userData);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData: SignupData) => {\n    try {\n      const response = await authService.signup(userData);\n      const { user: newUser, token: authToken } = response;\n      \n      setUser(newUser);\n      setToken(authToken);\n      localStorage.setItem('token', authToken);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    login,\n    signup,\n    logout,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}